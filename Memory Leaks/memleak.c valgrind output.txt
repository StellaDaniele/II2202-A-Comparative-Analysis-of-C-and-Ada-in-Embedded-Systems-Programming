ii2202@usr:/home $ gcc -Wall -Wextra memleak.c
memleak.c: In function ‘allocate_memory’:
memleak.c:6:10: warning: unused variable ‘ptr’ [-Wunused-variable]
    6 |     int *ptr = (int *)malloc(sizeof(int));
      |          ^~~


ii2202@usr:/home $ valgrind --leak-check=yes --track-origins=yes ./a.out
==1852== Memcheck, a memory error detector
==1852== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==1852== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==1852== Command: ./a.out
==1852==
C Code with Memory Leak
==1852==
==1852== HEAP SUMMARY:
==1852==     in use at exit: 4 bytes in 1 blocks
==1852==   total heap usage: 2 allocs, 1 frees, 1,028 bytes allocated
==1852==
==1852== 4 bytes in 1 blocks are definitely lost in loss record 1 of 1
==1852==    at 0x48850C8: malloc (vg_replace_malloc.c:381)
==1852==    by 0x1087E3: allocate_memory (in /home/a.out)
==1852==    by 0x10880B: main (in /home/a.out)
==1852==
==1852== LEAK SUMMARY:
==1852==    definitely lost: 4 bytes in 1 blocks
==1852==    indirectly lost: 0 bytes in 0 blocks
==1852==      possibly lost: 0 bytes in 0 blocks
==1852==    still reachable: 0 bytes in 0 blocks
==1852==         suppressed: 0 bytes in 0 blocks
==1852==
==1852== For lists of detected and suppressed errors, rerun with: -s
==1852== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
